"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = require("../axios");
var Msg91 = /** @class */ (function () {
    function Msg91() {
        this.initialized = false;
    }
    Msg91.prototype.initialize = function (options) {
        if (this.initialized)
            throw new Error("MSG91 already initialized");
        this.authKey = options.authKey;
        this.initialized = true;
    };
    Msg91.prototype.validateInit = function () {
        if (!this.initialized)
            throw new Error("Call the initialize() first");
    };
    Msg91.prototype.getCampaign = function (options) {
        this.validateInit();
        return new Campaign((options === null || options === void 0 ? void 0 : options.authKey) || this.authKey || "");
    };
    Msg91.prototype.getOTP = function (templateId, options) {
        this.validateInit();
        return new Otp(templateId, (options === null || options === void 0 ? void 0 : options.authKey) || this.authKey || "");
    };
    Msg91.prototype.getSMS = function (options) {
        this.validateInit();
        return new Sms((options === null || options === void 0 ? void 0 : options.authKey) || this.authKey || "");
    };
    return Msg91;
}());
var Sms = /** @class */ (function () {
    function Sms(authKey) {
        this.authKey = authKey;
    }
    Sms.prototype.send = function (flowId, recipient, options) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://api.msg91.com/api/v5/flow/");
            var data = {
                flow_id: flowId,
            };
            if (!Array.isArray(recipient)) {
                data = __assign(__assign(__assign({}, data), recipient), { 'mobiles': recipient.mobile });
            }
            else {
                data.recipients = recipient;
            }
            if (options === null || options === void 0 ? void 0 : options.senderId)
                data.sender = options.senderId;
            if ((options === null || options === void 0 ? void 0 : options.shortURL) != null)
                data.short_url = options.shortURL ? '1' : '0';
            var config = {
                method: 'post',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                },
                data: JSON.stringify(data)
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    return Sms;
}());
var Campaign = /** @class */ (function () {
    function Campaign(authKey) {
        this.authKey = authKey;
    }
    Campaign.prototype.getAll = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns");
            var config = {
                method: 'get',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                }
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var _b, _c;
                var data = _a.data;
                var hasError = data.hasError, errors = data.errors, status = data.status;
                switch (status) {
                    case "success":
                        return resolve(((_b = data === null || data === void 0 ? void 0 : data.data) === null || _b === void 0 ? void 0 : _b.data) || []);
                        break;
                    case "error":
                        return reject({ errors: errors });
                        break;
                    default:
                        return resolve(((_c = data === null || data === void 0 ? void 0 : data.data) === null || _c === void 0 ? void 0 : _c.data) || []);
                        break;
                }
            })
                .catch(function (error) {
                // console.log(error);
                return reject(error);
            });
        });
    };
    Campaign.prototype.getFields = function (slug) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns/".concat(slug, "/fields"));
            var config = {
                method: 'get',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                }
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var hasError = data.hasError, errors = data.errors, status = data.status;
                switch (status) {
                    case "success":
                        return resolve(data === null || data === void 0 ? void 0 : data.data);
                        break;
                    case "error":
                        return reject({ errors: errors });
                        break;
                    default:
                        return resolve(data === null || data === void 0 ? void 0 : data.data);
                        break;
                }
            })
                .catch(function (error) {
                console.log(error);
                return reject(error);
            });
        });
    };
    Campaign.prototype.getBody = function (slug) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns/".concat(slug, "/snippets"));
            var config = {
                method: 'get',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                }
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var _b, _c, _d, _e;
                var data = _a.data;
                var hasError = data.hasError, errors = data.errors, status = data.status;
                switch (status) {
                    case "success":
                        return resolve((_c = (_b = data === null || data === void 0 ? void 0 : data.data) === null || _b === void 0 ? void 0 : _b.requestBody) === null || _c === void 0 ? void 0 : _c.data);
                        break;
                    case "error":
                        return reject({ errors: errors });
                        break;
                    default:
                        return resolve((_e = (_d = data === null || data === void 0 ? void 0 : data.data) === null || _d === void 0 ? void 0 : _d.requestBody) === null || _e === void 0 ? void 0 : _e.data);
                        break;
                }
            })
                .catch(function (error) {
                console.log(error);
                return reject(error);
            });
        });
    };
    Campaign.prototype.run = function (slug, body) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://control.msg91.com/api/v5/campaign/api/campaigns/".concat(slug, "/run"));
            var data = JSON.stringify(body);
            var config = {
                method: 'post',
                url: url.toString(),
                headers: {
                    authkey: _this.authKey
                },
                data: data
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                console.log(error);
                return reject(error);
            });
        });
    };
    Campaign.prototype.send = function (slug, body) {
        return this.run(slug, body);
    };
    return Campaign;
}());
var Otp = /** @class */ (function () {
    function Otp(templateId, authkey) {
        this.templateId = templateId;
        this.authkey = authkey;
    }
    Otp.prototype.retry = function (mobileNumber, type) {
        var _this = this;
        if (type === void 0) { type = "text"; }
        return new Promise(function (resolve, reject) {
            var url = new URL("https://api.msg91.com/api/v5/otp/retry");
            url.searchParams.append("retrytype", type);
            url.searchParams.append("mobile", mobileNumber);
            url.searchParams.append("authkey", _this.authkey);
            var config = {
                method: 'post',
                url: url.toString()
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data, status = _a.status;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    Otp.prototype.verify = function (mobileNumber, otp) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (!otp) {
                return reject(new Error("Provide OTP to verify"));
            }
            var url = new URL("https://api.msg91.com/api/v5/otp/verify");
            url.searchParams.append("otp", otp);
            url.searchParams.append("mobile", mobileNumber);
            url.searchParams.append("authkey", _this.authkey);
            var config = {
                method: 'post',
                url: url.toString(),
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data, status = _a.status;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    Otp.prototype.send = function (mobileNumber, options) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var url = new URL("https://api.msg91.com/api/v5/otp");
            if (options === null || options === void 0 ? void 0 : options.expiry)
                url.searchParams.append("otp_expiry", options === null || options === void 0 ? void 0 : options.expiry.toString());
            url.searchParams.append("template_id", (options === null || options === void 0 ? void 0 : options.templateId) || _this.templateId);
            url.searchParams.append("mobile", mobileNumber);
            url.searchParams.append("authkey", _this.authkey);
            var config = {
                method: 'post',
                url: url.toString()
            };
            (0, axios_1.default)(config)
                .then(function (_a) {
                var data = _a.data;
                var message = data.message, type = data.type;
                switch (type) {
                    case "success":
                        return resolve({ message: message });
                        break;
                    case "error":
                        return reject({ message: message });
                        break;
                    default:
                        return resolve(data);
                        break;
                }
            })
                .catch(function (error) {
                return reject(error);
            });
        });
    };
    return Otp;
}());
var msg91 = (function () {
    var object = null;
    if (object) {
        return object;
    }
    else {
        return object = new Msg91();
    }
})();
exports.default = msg91;
